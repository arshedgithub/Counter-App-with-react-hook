{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","Counter","index","onDelete","setTotalCount","totalCount","useState","count","setCount","useEffect","badgeClass","getBadgeClass","onClick","disabled","Counters","initialCount","setInitialCount","splice","findIndex","id","map","value","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAceA,EAZA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChB,OACE,qBAAKC,UAAU,mCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,2CACW,sBAAMA,UAAU,qBAAhB,SAAsCD,Y,OCsD1CE,EA3DC,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACjD,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACW,IAAfJ,GACFG,EAAS,KAEV,CAACH,IAkBJ,OACE,qBAAKL,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAVQ,WACpB,IAAIU,EAAa,YAEjB,OADAA,GAAwB,IAAVH,EAAc,eAAiB,eAQtBI,GAAjB,SACa,IAAVJ,EAAc,OAASA,MAG5B,sBAAKP,UAAU,MAAf,UACE,wBACEA,UAAU,yBACVY,QAAS,kBA1BjBJ,EAASD,EAAQ,QACjBH,EAAcC,EAAa,IAuBrB,eAMA,wBACEL,UAAU,yBACVY,QAAS,kBA3BjBJ,EAASD,EAAQ,QACjBH,EAAcC,EAAa,IA2BnBQ,SAAoB,IAAVN,EAHZ,eAOA,wBACEP,UAAU,iBACVY,QAAS,kBAAMT,EAASD,EAAOK,IAFjC,6BCXKO,EAnCE,SAAC,GAAmC,IAAjCV,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACjC,EAAwCC,mBAAS,CAAC,IAAK,IAAK,IAAK,MAAjE,mBAAOS,EAAP,KAAqBC,EAArB,KAOMb,EAAW,SAACD,EAAOK,GACvBQ,EAAaE,OACXF,EAAaG,WAAU,SAAAC,GAAE,OAAIA,IAAOjB,KACpC,GAEFc,EAAgB,YAAID,IACpBX,EAAcC,EAAaE,IAG7B,OACE,gCACE,wBAAQP,UAAU,6BAA6BY,QAhBnC,WACdI,EAAgB,CAAC,IAAK,IAAK,IAAK,MAChCZ,EAAc,IAcZ,mBAGCW,EAAaK,KAAI,SAAAC,GAAK,OACrB,cAAC,EAAD,CAEEnB,MAAOmB,EACPlB,SAAUA,EACVC,cAAeA,EACfC,WAAYA,GAJPgB,UCXAC,G,MAXH,WACV,MAAoChB,mBAAS,GAA7C,mBAAOD,EAAP,KAAmBD,EAAnB,KAEA,OACE,eAAC,IAAMmB,SAAP,WACE,cAAC,EAAD,CAAQxB,cAAeM,IACvB,cAAC,EAAD,CAAUD,cAAeA,EAAeC,WAAYA,SCC3CmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.b1ebda93.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light p-3\">\r\n      <div className=\"container-fluid\">\r\n        <h3>\r\n          Counters <span className=\"badge bg-secondary\">{totalCounters}</span>\r\n        </h3>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Counter = ({ index, onDelete, setTotalCount, totalCount }) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (totalCount === 0) {\r\n      setCount(0);\r\n    }\r\n  }, [totalCount]);\r\n\r\n  const onIncrement = () => {\r\n    setCount(count + 1);\r\n    setTotalCount(totalCount + 1);\r\n  };\r\n\r\n  const onSubstitution = () => {\r\n    setCount(count - 1);\r\n    setTotalCount(totalCount - 1);\r\n  };\r\n\r\n  const getBadgeClass = () => {\r\n    let badgeClass = \"badge bg-\";\r\n    badgeClass += count === 0 ? \"warning fs-6\" : \"primary fs-5\";\r\n    return badgeClass;\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row my-3'>\r\n        <div className='col-1 mx-2'>\r\n          <span className={getBadgeClass()}>\r\n            {count === 0 ? \"zero\" : count}\r\n          </span>\r\n        </div>\r\n        <div className='col'>\r\n          <button\r\n            className='btn btn-secondary mx-1'\r\n            onClick={() => onIncrement()}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className='btn btn-secondary mx-2'\r\n            onClick={() => onSubstitution()}\r\n            disabled={count === 0}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            className='btn btn-danger'\r\n            onClick={() => onDelete(index, count)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useState } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nconst Counters = ({ setTotalCount, totalCount }) => {\r\n  const [initialCount, setInitialCount] = useState([\"1\", \"2\", \"3\", \"4\"]);\r\n\r\n  const onReset = () => {\r\n    setInitialCount([\"1\", \"2\", \"3\", \"4\"]);\r\n    setTotalCount(0);\r\n  };\r\n\r\n  const onDelete = (index, count) => {\r\n    initialCount.splice(\r\n      initialCount.findIndex(id => id === index),\r\n      1\r\n    );\r\n    setInitialCount([...initialCount]);\r\n    setTotalCount(totalCount - count);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='btn btn-sm btn-primary m-3' onClick={onReset}>\r\n        Reset\r\n      </button>\r\n      {initialCount.map(value => (\r\n        <Counter\r\n          key={value}\r\n          index={value}\r\n          onDelete={onDelete}\r\n          setTotalCount={setTotalCount}\r\n          totalCount={totalCount}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n","import React, { useState } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Counters from \"./components/counters\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [totalCount, setTotalCount] = useState(0);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar totalCounters={totalCount} />\r\n      <Counters setTotalCount={setTotalCount} totalCount={totalCount} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}