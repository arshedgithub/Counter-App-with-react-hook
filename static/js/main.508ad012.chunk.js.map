{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","Counter","this","props","counter","onIncrement","onSubstitution","onDelete","index","getBadgeClass","formatCount","value","onClick","disabled","id","badgeClass","Component","Counters","counters","onReset","map","App","useState","setCounters","Fragment","filter","c","length","counterID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.508ad012.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light p-3\">\r\n      <div className=\"container-fluid\">\r\n        <h3>\r\n          Counters <span className=\"badge bg-secondary\">{totalCounters}</span>\r\n        </h3>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    const { counter, onIncrement, onSubstitution, onDelete, index } =\r\n      this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-1 mx-2\">\r\n            <span className={this.getBadgeClass()}>\r\n              {this.formatCount(counter.value)}\r\n            </span>\r\n          </div>\r\n          <div className=\"col\">\r\n            <button\r\n              className=\"btn btn-secondary mx-1\"\r\n              onClick={() => onIncrement(counter, index)}\r\n            >\r\n              +\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary mx-2\"\r\n              onClick={() => onSubstitution(counter, index)}\r\n              disabled={counter.value === 0 ? \"disabled\" : \"\"}\r\n            >\r\n              -\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => onDelete(counter.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n\r\n  getBadgeClass() {\r\n    let badgeClass = \"badge bg-\";\r\n    badgeClass +=\r\n      this.props.counter.value === 0 ? \"warning fs-6\" : \"primary fs-5\";\r\n    return badgeClass;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nconst Counters = ({\r\n  counters,\r\n  onIncrement,\r\n  onSubstitution,\r\n  onReset,\r\n  onDelete,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-sm btn-primary m-3\" onClick={onReset}>\r\n        Reset\r\n      </button>\r\n      {counters.map((counter, index) => (\r\n        <Counter\r\n          key={counter.id}\r\n          counter={counter}\r\n          onIncrement={onIncrement}\r\n          onSubstitution={onSubstitution}\r\n          onDelete={onDelete}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n","import React, { useState } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Counters from \"./components/counters\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [counters, setCounters] = useState([\r\n    { id: 1, value: 0 },\r\n    { id: 2, value: 1 },\r\n    { id: 3, value: 0 },\r\n    { id: 4, value: 2 }\r\n  ]);\r\n\r\n  const handleIncrement = (counter, index) => {\r\n    counters[index].value = counter.value + 1;\r\n    setCounters([...counters]);\r\n  };\r\n\r\n  const handleSubstitution = (counter, index) => {\r\n    counters[index].value = counter.value - 1;\r\n    setCounters([...counters]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setCounters([\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ]);\r\n  };\r\n\r\n  const handleDelete = counterID => {\r\n    setCounters([...counters.filter(c => c.id !== counterID)]);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar totalCounters={counters.filter(c => c.value > 0).length} />\r\n      <Counters\r\n        counters={counters}\r\n        onIncrement={handleIncrement}\r\n        onSubstitution={handleSubstitution}\r\n        onReset={handleReset}\r\n        onDelete={handleDelete}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}